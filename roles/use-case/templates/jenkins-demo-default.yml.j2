controller:
  JCasC:
    configScripts:
      demo-default: |
        credentials:
          system:
            domainCredentials:
              - credentials:
                - usernamePassword:
                    id: "git-creds-ace"
                    scope: GLOBAL
                    description: "Git credentials"
                    username: "{{ git_username | default(None) }}"
                    password: "{{ git_password | default(None) }}"
                - personalAccessTokenImpl:
                    id: "git-access-token"
                    scope: GLOBAL
                    token: "{{ git_access_token | default(None) }}"
        jobs:
        - script: >
            folder('demo-default')
        - script: >
            pipelineJob('demo-default/1. Build') {
              parameters {
                choiceParam('BUILD', ['1','2','3','4'], 'Select the build you want to deploy (affects application behavior, github.com/grabnerandi/simplenodeservice for more details)')
              }
              definition {
                cpsScm {
                  scriptPath('jenkins/build.Jenkinsfile')
                  scm {
                    git {
                        remote { 
                          url('{{ ingress_protocol }}://{{ git_domain }}/{{ git_org_demo }}/{{ git_repo_demo }}')
                          credentials('git-creds-ace')
                        }
                        branch('*/main')
                    }
                  }
                  lightweight()
                }
              }
            }
        - script: >
            pipelineJob('demo-default/2. Deploy') {
              parameters {
                stringParam('APP_NAME', 'simplenodeservice', 'The name of the service to deploy.')
                stringParam('TAG_STAGING', '', 'The image of the service to deploy.')
                stringParam('BUILD', '', 'The version of the service to deploy.')
                stringParam('ART_VERSION', '', 'The artefact version and hash to deploy.')
              }
              definition {
                cpsScm {
                  scriptPath('jenkins/deployStaging.Jenkinsfile')
                  scm {
                    git {
                        remote { 
                          url('{{ ingress_protocol }}://{{ git_domain }}/{{ git_org_demo }}/{{ git_repo_demo }}')
                          credentials('git-creds-ace')
                        }
                        branch('*/main')
                    }
                  }
                  lightweight()
                }
              }
            }
        - script: >
            pipelineJob('demo-default/3. Test') {
              parameters {
                stringParam('APP_NAME', 'simplenodeservice', 'The name of the service to deploy.')
                stringParam('BUILD', '', 'The version of the service to deploy.')
                stringParam('ART_VERSION', '', 'The artefact version and hash to deploy.')
                choiceParam('QG_MODE', ['yaml','dashboard'], 'Use yaml or dashboard for QG')
              }
              definition {
                cpsScm {
                  scriptPath('jenkins/test.Jenkinsfile')
                  scm {
                    git {
                        remote { 
                          url('{{ ingress_protocol }}://{{ git_domain }}/{{ git_org_demo }}/{{ git_repo_demo }}')
                          credentials('git-creds-ace')
                        }
                        branch('*/main')
                    }
                  }
                  lightweight()
                }
              }
            }
        - script: >
            pipelineJob('demo-default/4. Deploy production') {
              parameters {
                stringParam('APP_NAME', 'simplenodeservice', 'The name of the service to deploy.')
                stringParam('TAG_STAGING', '', 'The image of the service to deploy.')
                stringParam('BUILD', '', 'The version of the service to deploy.')
                stringParam('ART_VERSION', '', 'The artefact version and hash to deploy.')
              }
              definition {
                cpsScm {
                  scriptPath('jenkins/deployProd.Jenkinsfile')
                  scm {
                    git {
                        remote { 
                          url('{{ ingress_protocol }}://{{ git_domain }}/{{ git_org_demo }}/{{ git_repo_demo }}')
                          credentials('git-creds-ace')
                        }
                        branch('*/main')
                    }
                  }
                  lightweight()
                }
              }
            }
        - script: >
            pipelineJob('demo-default/Monitoring as Code') {
              definition {
                cpsScm {
                  scriptPath('jenkins/mac.Jenkinsfile')
                  scm {
                    git {
                        remote { 
                          url('{{ ingress_protocol }}://{{ git_domain }}/{{ git_org_demo }}/{{ git_repo_demo }}')
                          credentials('git-creds-ace')
                        }
                        branch('*/main')
                    }
                  }
                  lightweight()
                }
              }
            }
