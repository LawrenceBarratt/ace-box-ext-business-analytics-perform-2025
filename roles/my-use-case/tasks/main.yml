---
# Debug message for external use case
- debug:
    msg: "Hello from your external use case!"

# Define absolute role path
- set_fact:
    role_path_abs: "{{ role_path }}"

- include_role:
    name: dt-access-token
  vars:
    access_token_var_name: "monaco_cleanup_api_token"
    access_token_scope:
      [
        "slo.read",
        "slo.write",
        "CaptureRequestData",
        "credentialVault.read",
        "credentialVault.write",
        "DataExport",
        "DataPrivacy",
        "ExternalSyntheticIntegration",
        "ReadConfig",
        "WriteConfig",
        "events.ingest",
        "settings.read",
        "settings.write",
        "metrics.ingest",
        "openTelemetryTrace.ingest",
        "logs.ingest"
      ]

#Generate OAuth Token
- block:
    - name: Request a DT OAuth access token
      ansible.builtin.uri:
        url: "{{ extra_vars.dt_oauth_sso_endpoint }}"
        method: POST
        status_code: 200
        headers:
          Content-Type: "application/x-www-form-urlencoded"
        body_format: form-urlencoded
        body:
          grant_type: "client_credentials"
          client_id: "{{ extra_vars.dt_oauth_client_id }}"
          client_secret: "{{ extra_vars.dt_oauth_client_secret }}"
          scope: "document:documents:read document:documents:write document:direct-shares:read document:direct-shares:write"
          resource: "{{ extra_vars.dt_oauth_account_urn }}"
      register: auth_response_raw
    - set_fact:
        dt_oauth_access_token: "{{ auth_response_raw.json.access_token }}"

# Install Biz Flow App
- name: Install Biz Flow App
  ignore_errors: true
  include_role:
    name: dt-platform
    tasks_from: ensure-app
  vars:
    dt_app_id: "{{ item.dt_app_id }}"
    dt_app_version: "{{ item.dt_app_version }}"
    dt_environment_url_gen3: "{{ extra_vars.dt_environment_url_gen3 }}"
    dt_oauth_sso_endpoint: "{{ extra_vars.dt_oauth_sso_endpoint }}"
    dt_oauth_client_id: "{{ extra_vars.dt_oauth_client_id }}"
    dt_oauth_client_secret: "{{ extra_vars.dt_oauth_client_secret }}"
    dt_oauth_account_urn: "{{ extra_vars.dt_oauth_account_urn }}"
  loop:
    - dt_app_id: "dynatrace.biz.flow"
      dt_app_version: "1.20.3"

- include_role:
    name: microk8s
- include_role:
    name: dt-operator-version-detection
  vars:
    dt_operator_release: "v1.4.0"

- include_role:
    name: app-easytrade

- include_role:
    name: monaco-v2
    tasks_from: apply-monaco
  vars:
    monaco_projects_root: "{{role_path_abs}}/files/monaco"  # monaco projects root folder path
    monaco_project: "deploy" # selection of projects or all projects under the root path if set empty
    monaco_manifest_path: "{{role_path_abs}}/files/monaco/manifest.yaml"
    monaco_environment:
      #SLACK_TOKEN: "{{ extra_vars.slack_token }}"
      JIRA_CONNECTION_TOKEN: "{{ extra_vars.jira_connection_token }}"
      DT_API_TOKEN: "{{ monaco_cleanup_api_token }}"
      DT_PLATFORM_TENANT_URL: "{{ extra_vars.dt_environment_url_gen3 }}"
      DT_OAUTH_CLIENT_ID: "{{ extra_vars.dt_oauth_client_id }}"
      DT_OAUTH_CLIENT_SECRET: "{{ extra_vars.dt_oauth_client_secret }}"
      DT_OAUTH_SSO_ENDPOINT: "{{ extra_vars.dt_oauth_sso_endpoint }}"
      INGRESS_DOMAIN: "{{ ingress_domain }}"

- include_role:
    name: monaco-v2
    tasks_from: apply-monaco
  vars:
    monaco_projects_root: "{{role_path_abs}}/files/monaco_platform"  # monaco projects root folder path
    monaco_project: "deploy" # selection of projects or all projects under the root path if set empty
    monaco_manifest_path: "{{role_path_abs}}/files/monaco_platform/manifest.yaml"
    monaco_environment:
      #SLACK_TOKEN: "{{ extra_vars.slack_token }}"
      DT_API_TOKEN: "{{ monaco_cleanup_api_token }}"
      DT_PLATFORM_TENANT_URL: "{{ extra_vars.dt_environment_url_gen3 }}"
      DT_OAUTH_CLIENT_ID: "{{ extra_vars.dt_oauth_client_id }}"
      DT_OAUTH_CLIENT_SECRET: "{{ extra_vars.dt_oauth_client_secret }}"
      DT_OAUTH_SSO_ENDPOINT: "{{ extra_vars.dt_oauth_sso_endpoint }}"
